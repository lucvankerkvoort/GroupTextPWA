{"version":3,"sources":["services/controller.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Modal/elements/addGroup.js","components/Modal/elements/addMembers.js","components/Modal/elements/addQuestion.js","components/Modal/elements/registration.js","components/Modal/elements/login.js","components/Modal/questionaire.js","components/Modal/modal.js","components/Groups/members.js","components/Groups/question.js","components/Groups/group.js","pages/CreateGroup.js"],"names":["url","getGroups","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","updateQuestion","id","data","body","JSON","stringify","then","res","json","getQuestion","addGroups","removeGroup","addMemberToGroup","removeMemberFromGroup","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AddGroup","close","userData","useContext","store","dispatch","useState","group_name","setGroupName","name","type","placeholder","onChange","e","onClick","preventDefault","info","state","groups","API","payload","check","console","log","AddMembers","member_name","setName","member_phone","setTel","cur_group_id","AddQuestion","question","setQuestion","Register","username","setUsername","password","setPassword","passwordConfirm","setPasswordConfirm","Login","Questionaire","element","className","questions","Modal","input","Members","members","map","style","cursor","member_id","Questions","Group","showElement","setShowElement","setElement","group_id","CreateGroup","useEffect"],"mappings":"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","file":"static/js/3.bb642b0b.chunk.js","sourcesContent":["const url = {\r\n  getGroups:\r\n    \"https://grouptext-django.dreamstate-4-all.org/view_groups_members/\",\r\n  addMember: \"https://grouptext-django.dreamstate-4-all.org/add_group_member/\",\r\n  groups: \"https://grouptext-django.dreamstate-4-all.org/TextGroups/\",\r\n  deleteMember:\r\n    \"https://grouptext-django.dreamstate-4-all.org/TextGroupMember/\",\r\n  addQuestion:\r\n    \"https://grouptext-django.dreamstate-4-all.org/ask_group_question/\",\r\n  getQuestion: \"https://grouptext-django.dreamstate-4-all.org/TextQuestion/ \",\r\n};\r\n\r\nexport default {\r\n  getGroups: () =>\r\n    fetch(url.getGroups, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n    }),\r\n  updateQuestion: (id, data) =>\r\n    fetch(url.addQuestion + id + \"/\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(data),\r\n    }).then((res) => res.json()),\r\n  getQuestion: () =>\r\n    fetch(url.getQuestion, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n    }),\r\n  addGroups: (data) =>\r\n    fetch(url.groups, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(data),\r\n    }).then((res) => res.json()),\r\n  removeGroup: (id) =>\r\n    fetch(url.groups + id + \"/\", {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n    }),\r\n  addMemberToGroup: (id, data) =>\r\n    fetch(url.addMember + id + \"/\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(data),\r\n    }).then((res) => res.json()),\r\n  removeMemberFromGroup: (id) =>\r\n    fetch(url.deleteMember + id + \"/\", {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n    }),\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { store } from \"../../../services/Store\";\r\nimport API from \"../../../services/controller\";\r\n\r\nexport const AddGroup = ({ close }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  const [group_name, setGroupName] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const info = {\r\n      ...group_name,\r\n    };\r\n\r\n    let updatedGroups = [...userData.state.groups];\r\n    updatedGroups.push(info);\r\n\r\n    API.addGroups(info).then((res) => {\r\n      dispatch({ type: \"check\", payload: !userData.state.check });\r\n      console.log(res);\r\n    });\r\n    // dispatch({ type: \"setGroups\", payload: updatedGroups });\r\n    close();\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        name=\"group_name\"\r\n        type=\"name\"\r\n        placeholder=\"Group name\"\r\n        onChange={(e) => setGroupName({ [e.target.name]: e.target.value })}\r\n      />\r\n      <button onClick={handleClick}>Submit</button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { store } from \"../../../services/Store\";\r\nimport API from \"../../../services/controller\";\r\n\r\nexport const AddMembers = ({ close }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  const [member_name, setName] = useState(\"\");\r\n  const [member_phone, setTel] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      ...member_name,\r\n      ...member_phone,\r\n    };\r\n    const id = userData.state.cur_group_id;\r\n    console.log(data);\r\n\r\n    API.addMemberToGroup(id, data).then((res) => {\r\n      dispatch({ type: \"check\", payload: !userData.state.check });\r\n      console.log(res);\r\n    });\r\n\r\n    // dispatch({ type: \"member\", payload: data });\r\n    close();\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        name=\"member_name\"\r\n        type=\"name\"\r\n        placeholder=\"Member name\"\r\n        onChange={(e) => setName({ [e.target.name]: e.target.value })}\r\n      />\r\n      <input\r\n        name=\"member_phone\"\r\n        type=\"tel\"\r\n        placeholder=\"Phone number\"\r\n        onChange={(e) => setTel({ [e.target.name]: e.target.value })}\r\n      />\r\n      <button onClick={handleClick}>Submit</button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { store } from \"../../../services/Store\";\r\nimport API from \"../../../services/controller\";\r\n\r\nexport const AddQuestion = ({ close }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      ...question,\r\n    };\r\n    const id = userData.state.cur_group_id;\r\n    API.updateQuestion(id, data).then((res) => {\r\n      dispatch({ type: \"check\", payload: !userData.state.check });\r\n      console.log(res);\r\n    });\r\n    close();\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        name=\"question\"\r\n        type=\"text\"\r\n        placeholder=\"Yes or no question\"\r\n        onChange={(e) => setQuestion({ [e.target.name]: e.target.value })}\r\n      />\r\n      <button onClick={handleClick}>Submit</button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { store } from \"../../../services/Store\";\r\n\r\nexport const Register = ({ close }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const info = {\r\n      ...username,\r\n      ...password,\r\n      ...passwordConfirm,\r\n    };\r\n    dispatch({ type: \"registration\", payload: info });\r\n    close();\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        name=\"username\"\r\n        type=\"name\"\r\n        placeholder=\"Username\"\r\n        onChange={(e) => setUsername({ [e.target.name]: e.target.value })}\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        onChange={(e) => setPassword({ [e.target.name]: e.target.value })}\r\n      />\r\n      <input\r\n        name=\"confirm_password\"\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        onChange={(e) =>\r\n          setPasswordConfirm({ [e.target.name]: e.target.value })\r\n        }\r\n      />\r\n      <button onClick={handleClick}>Submit</button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { store } from \"../../../services/Store\";\r\n\r\nexport const Login = ({ close }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const info = {\r\n      ...username,\r\n      ...password,\r\n    };\r\n    dispatch({ type: \"login\", payload: info });\r\n    close();\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        name=\"username\"\r\n        type=\"name\"\r\n        placeholder=\"Username\"\r\n        onChange={(e) => setUsername({ [e.target.name]: e.target.value })}\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        onChange={(e) => setPassword({ [e.target.name]: e.target.value })}\r\n      />\r\n      <button onClick={handleClick}>Submit</button>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AddGroup } from \"./elements/addGroup\";\r\nimport { AddMembers } from \"./elements/addMembers\";\r\nimport { AddQuestion } from \"./elements/addQuestion\";\r\nimport { Register } from \"./elements/registration\";\r\nimport { Login } from \"./elements/login\";\r\n\r\nconst Questionaire = ({ close, info, element }) => {\r\n  // const handleClick = (e) => {\r\n  //   console.log(info);\r\n  //   e.preventDefault();\r\n  //   if (Object.keys(this.state).length === 0) {\r\n  //     let form = document.getElementsByTagName(\"form\");\r\n  //     if (form[0].children.length <= 3) {\r\n  //       let message = document.createElement(\"p\");\r\n  //       message.textContent = \"Please provide a Group Name\";\r\n  //       form[0].append(message);\r\n  //     }\r\n  //   } else {\r\n  //     info();\r\n  //     close();\r\n  //   }\r\n  // };\r\n  const questions = () => {\r\n    switch (element) {\r\n      case \"Login\":\r\n        return <Login close={close} />;\r\n      case \"Register\":\r\n        return <Register close={close} />;\r\n      case \"Groups\":\r\n        return <AddGroup close={close} />;\r\n      case \"Member\":\r\n        return <AddMembers close={close} />;\r\n      case \"Question\":\r\n        return <AddQuestion close={close} />;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Questionaire\">\r\n      <h2>{element}</h2>\r\n      <form>{questions()}</form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questionaire;\r\n","import React, { useContext } from \"react\";\r\nimport Questionaire from \"./questionaire\";\r\nimport { store } from \"../../services/Store\";\r\n\r\nconst Modal = ({ close, data }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2 className=\"close\" onClick={() => close()}>\r\n        X\r\n      </h2>\r\n      <div className=\"screen\">\r\n        <Questionaire\r\n          close={() => close()}\r\n          element={userData.state.element}\r\n          data={data}\r\n          info={(input) => {\r\n            dispatch({ type: \"setInfo\", payload: input });\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useContext } from \"react\";\r\nimport { store } from \"../../services/Store\";\r\nimport API from \"../../services/controller\";\r\n\r\nconst Members = ({ members }) => {\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n  return (\r\n    <div className=\"members\">\r\n      <table>\r\n        {(members || []).length < 1 ? null : (\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Tel</th>\r\n              <th>Remove</th>\r\n            </tr>\r\n          </thead>\r\n        )}\r\n        <tbody>\r\n          {(members || []).map((element, i) => {\r\n            return (\r\n              <tr key={i} className={element + i}>\r\n                <td>{element.member_name}</td>\r\n                <td>{element.member_phone}</td>\r\n                <td\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    API.removeMemberFromGroup(element.member_id).then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                        dispatch({\r\n                          type: \"check\",\r\n                          payload: !userData.state.check,\r\n                        });\r\n                      }\r\n                    )\r\n                  }\r\n                >\r\n                  X\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Members;\r\n","import React from \"react\";\r\n\r\nconst Questions = ({ questions }) => {\r\n  console.log(questions);\r\n  return (\r\n    <>\r\n      {(questions || []).length < 1 ? null : (\r\n        <div className=\"question\">\r\n          <h2>Question</h2>\r\n          <p>{questions[questions.length - 1].question}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Modal from \"../Modal/modal\";\r\nimport Members from \"./members\";\r\nimport Questions from \"./question\";\r\nimport { store } from \"../../services/Store\";\r\nimport API from \"../../services/controller\";\r\n\r\nconst Group = ({ element }) => {\r\n  const [showElement, setShowElement] = useState(false);\r\n\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  const setElement = (input) => {\r\n    setShowElement(true);\r\n    dispatch({\r\n      type: \"setElement\",\r\n      payload: input,\r\n    });\r\n    dispatch({ type: \"setCurrent\", payload: element.group_id });\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupElement\">\r\n      {showElement ? <Modal close={() => setShowElement(false)} /> : null}\r\n      <h1>{element.group_name}</h1>\r\n      <Members members={element.members} />\r\n      {console.log(element.questions)}\r\n      <Questions questions={element.questions} />\r\n      <div className=\"buttons-group\">\r\n        <button onClick={() => setElement(\"Member\")}>Add a Member</button>\r\n        <button onClick={() => setElement(\"Question\")}>Add a Question</button>\r\n        <button\r\n          onClick={() => {\r\n            API.removeGroup(element.group_id).then((res) => {\r\n              dispatch({ type: \"check\", payload: !userData.state.check });\r\n              console.log(res);\r\n            });\r\n          }}\r\n        >\r\n          Remove Group\r\n        </button>\r\n        <button>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport API from \"../services/controller\";\r\nimport { store } from \"../services/Store\";\r\nimport Modal from \"../components/Modal/modal\";\r\nimport Group from \"../components/Groups/group\";\r\n\r\nconst CreateGroup = () => {\r\n  const [showElement, setShowElement] = useState(false);\r\n\r\n  const userData = useContext(store);\r\n  const { dispatch } = userData;\r\n\r\n  // API.getQuestion()\r\n  //   .then((res) => res.json)\r\n  //   .then((data) => dispatch({ type: \"setQuestions\", payload: data }));\r\n\r\n  useEffect(\r\n    function () {\r\n      API.getGroups()\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          dispatch({ type: \"setGroups\", payload: data });\r\n          console.log(data);\r\n        });\r\n    },\r\n    [userData.state.check]\r\n  );\r\n\r\n  return (\r\n    <div className=\"CreateGroup\">\r\n      {showElement ? <Modal close={() => setShowElement(false)} /> : null}\r\n      <div\r\n        className=\"addGroup\"\r\n        onClick={() => {\r\n          setShowElement(true);\r\n          dispatch({ type: \"setElement\", payload: \"Groups\" });\r\n        }}\r\n      >\r\n        Add a Group +\r\n      </div>\r\n      {(userData.state.groups || []).map((element, i) => {\r\n        return <Group key={i} element={element} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default CreateGroup;\r\n"],"sourceRoot":""}